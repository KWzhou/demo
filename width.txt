
//FIN
Q: FIN width in GATE poly direction = 0.01um
A: 
FIN_W_1 {
@ FIN width in GATE poly direction = 0.01um
 err1 = INT (FIN_h_edges) == 0.010 ABUT<90 OPPOSITE
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}
// CELLB
Q: CELLB width in S/D direction >= 0.43um
A: 
CELLB_W_1 {
@ CELLB width in S/D direction >= 0.43um
 err1 = LENGTH (ANGLE CELLB_convex_eq_two_edges == 0) < 0.43
 err1 NOT INSIDE EDGE SealR_NOT_BULK

 err2 = INT CELLB_v_edges < 0.43 ABUT<90 OPPOSITE REGION
 err2 NOT INSIDE SealR_NOT_BULK
}
Q: CELLB width in GATE poly direction = 0.288+0.048*num
A: 
CELLB_W_2 {
@ CELLB width in GATE poly direction = 0.288+0.048*num
 chk_CELLB = ANGLE CELLB_convex_eq_two_edges == 90
 err1 = DFM PROPERTY chk_CELLB [-= ABS(REMAINDER((LENGTH(chk_CELLB) - 0.288),0.048))] > 0
 err1 NOT INSIDE EDGE SealR_NOT_BULK

 err2 = INT CELLB_h_edges < 0.288 ABUT<90 OPPOSITE REGION
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: DMCB1 width in GATE poly direction = 0.288+0.048*num
A: 
CELLB_W_3 {
@ DMCB1 width in GATE poly direction = 0.288+0.048*num
 chk_DMCB1 = ANGLE (CONVEX EDGE DMCB1 == 2) == 90
 err1 = DFM PROPERTY chk_DMCB1 [-= ABS(REMAINDER((LENGTH(chk_DMCB1) - 0.288),0.048))] > 0
 err1 NOT INSIDE EDGE SealR_NOT_BULK

 err2 = INT DMCB1_h_edges < 0.288 ABUT<90 OPPOSITE REGION
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: DMCB1 horizontal edge length >= 0.388um
A: 
CELLB_W_4 {
@ DMCB1 horizontal edge length >= 0.388um
 err1 = LENGTH DMCB1_h_edges < 0.388
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}
//AA

Q: ALL_AA width, except INST region >= 0.09um
A: 
AA_W_1 {
@ ALL_AA width, except INST region >= 0.09um
 err1 = INT ALL_AA < 0.09 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE INST
}

Q: ALL_AA width for I/O region, except DMC7 region >= 0.144um
A: 
AA_W_2 {
@ ALL_AA width for I/O region, except DMC7 region >= 0.144um
 err1 = (INT ALL_AA_IO < 0.144 ABUT<90 SINGULAR REGION) AND DG
 err1 NOT INSIDE DMC7
}

Q: ALL_AA width in GATE poly direction, except INST region = 0.096+0.048*num
A: 
AA_W_3a {
@ ALL_AA width in GATE poly direction, except INST region = 0.096+0.048*num
 err1 = INT ALL_AA_h_edges < 0.096 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE INST

 err2_EDGE = ANGLE ALL_AA_convex_equal_two_edge == 90
 err2_TMP = DFM PROPERTY err2_EDGE [-= ABS(REMAINDER((LENGTH(err2_EDGE) - 0.048), 0.048))] > 0
 err2 = err2_TMP NOT INSIDE EDGE INST
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

ALL_AA_convex_equal_two_v_edges = ANGLE ALL_AA_convex_equal_two_edge == 90

Q: ALL_AA width in GATE poly direction for I/O region, except DMC7 region = 0.144+0.048*num
A: 
AA_W_3b {
@ ALL_AA width in GATE poly direction for I/O region, except DMC7 region = 0.144+0.048*num
 err1 = (DFM COPY (DFM SPACE ALL_AA_IO < 0.144 BY INT VERTICAL) REGION) NOT INSIDE DMC7
 err1 NOT INSIDE SealR_NOT_BULK

 err2_EDGE = ALL_AA_convex_equal_two_v_edges TOUCH EDGE ALL_AA_IO
 err2_TMP = DFM PROPERTY err2_EDGE [-= ABS(REMAINDER((LENGTH(err2_EDGE) - 0.144), 0.048))] > 0
 err2 = ((DFM COPY err2_TMP) INSIDE EDGE DG) NOT INSIDE EDGE DMC7
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Channel width of core device, except DMPNP, ESDIO1, ESDIO2, INST regions = 0.096+0.048*num
A: 
AA_W_4a {
@ Channel width of core device, except DMPNP, ESDIO1, ESDIO2, INST regions = 0.096+0.048*num
 except_area = OR DMPNP ESDIO_ALL INST
 err1 = GATE_CORE NOT WITH EDGE (LENGTH GATE_WE >= 0.096)
 err1 NOT INSIDE except_area

 core_DEV = GATE_CORE NOT INSIDE except_area
 core_DEV_WE = GATE_WE COIN EDGE core_DEV
 core_DEV_WE_CHK = (CONVEX EDGE GATE_CORE == 2) COIN EDGE core_DEV_WE
 err2 = DFM PROPERTY core_DEV_WE_CHK core_DEV OVERLAP ABUT ALSO MULTI [-= ABS(REMAINDER((LENGTH(core_DEV_WE_CHK) - 0.096), 0.048))] > 0
 err2 NOT INSIDE EDGE except_area
}

Q: Channel width of I/O device, except (pick-up NOT VARMOS) = 0.192+0.048*num
A: 
AA_W_4b {
@ Channel width of I/O device, except (pick-up NOT VARMOS) = 0.192+0.048*num
 err1 = (GATE_IO NOT WITH EDGE (LENGTH GATE_WE >= 0.192)) NOT INSIDE TAP_NOT_VARMOS
 err1 NOT INSIDE SealR_NOT_BULK

 io_DEV = GATE_IO NOT INSIDE TAP_NOT_VARMOS
 io_DEV_WE = GATE_WE COIN EDGE io_DEV
 io_DEV_WE_CHK = ((CONVEX EDGE GATE_IO == 2) COIN EDGE io_DEV_WE) NOT INSIDE EDGE SealR_NOT_BULK
 err2 = DFM PROPERTY io_DEV_WE_CHK io_DEV OVERLAP ABUT ALSO MULTI [-= ABS(REMAINDER((LENGTH(io_DEV_WE_CHK) - 0.192), 0.048))] > 0
 err2 NOT INSIDE EDGE TAP_NOT_VARMOS
}

Q: ALL_AA width in GATE poly direction, except INST region <= 0.96um
A: 
AA_W_5 {
@ ALL_AA width in GATE poly direction, except INST region <= 0.96um
 err1 = INT (ALL_AA_h_edges) <= 0.96 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 err1 NOT INSIDE EDGE INST
}

//AR

Q: AR width in S/D direction, except OCOVL region = 0.02um
A: 
AR_W_1 {
@ AR width in S/D direction, except OCOVL region = 0.02um
 err1 = INT (AR_v_edges) == 0.020 ABUT<90 OPPOSITE  //;AR.R.6 based on this
 err1 NOT INSIDE EDGE OCOVL
}

//DNW

Q: DNW width >= 1.49um
A: 
DNW_W_1 {
@ DNW width >= 1.49um
 err1 = INT DNW < 1.49 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

//DW
Q: NW width, except INST region >= 0.214um
A: 
NW_W_1 {
@ NW width, except INST region >= 0.214um
 err1 = INT NW < NW_MiniWidth ABUT<90 SINGULAR REGION
 err1 NOT INSIDE INST
}

Q: IO_NW width >= 0.214um
A: 
NW_W_2 {
@ IO_NW width >= 0.214um
 err1 = INT IO_NW < 0.214 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: IO_PW width, except INST region >= 0.238um
A: 
NW_W_2a {
@ IO_PW width, except INST region >= 0.238um
 err1 = INT IO_PW < 0.238 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE INST
}

Q: Core_NW width, except INST region >= 0.214um
A: 
NW_W_3_1 {
@ Core_NW width, except INST region >= 0.214um
 err1 = INT core_NW < 0.214 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE INST
}

Q: (NW OR DG) width, except INST region >= 0.214um
A: 
NW_W_3_2 {
@ (NW OR DG) width, except INST region >= 0.214um
 err1 = INT DG_or_NW < 0.214 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE INST
}

Q: NW width, when the space <= 0.235um, except INST region <= 0.365um
A: 
NW_W_4a {
@ NW width, when the space <= 0.235um, except INST region <= 0.365um
 nw_meet_sps_sides = EXT [NW] <= 0.235 ABUT<90 OPPOSITE
 nw_meet_sps_block = NW WITH EDGE nw_meet_sps_sides
 err1 = (INT (nw_meet_sps_block) <= 0.365 ABUT<90 OPPOSITE) COIN EDGE nw_meet_sps_sides
 err2 = (nw_meet_sps_block WITH WIDTH > 0.365) WITH EDGE nw_meet_sps_sides
 err1 NOT INSIDE EDGE INST
 err2 NOT INSIDE INST
}

Q: Core_NW width, when the space <= 0.235um, except INST region <= 0.365um
A: 
NW_W_4b {
@ Core_NW width, when the space <= 0.235um, except INST region <= 0.365um
 nw_meet_sps_sides = EXT [core_NW] <= 0.235 ABUT<90 OPPOSITE
 nw_meet_sps_block = core_NW WITH EDGE nw_meet_sps_sides
 err1 = (INT (nw_meet_sps_block) <= 0.365 ABUT<90 OPPOSITE) COIN EDGE nw_meet_sps_sides
 err2 = (nw_meet_sps_block WITH WIDTH > 0.365) WITH EDGE nw_meet_sps_sides
 err1 NOT INSIDE EDGE INST
 err2 NOT INSIDE INST
}

Q: IO_NW width, when the space <= 0.235um, except INST region <= 0.365um
A: 
NW_W_4d {
@ IO_NW width, when the space <= 0.235um, except INST region <= 0.365um
 nw_meet_sps_sides = EXT [IO_NW] <= 0.235 ABUT<90 OPPOSITE
 nw_meet_sps_block = IO_NW WITH EDGE nw_meet_sps_sides
 err1 = (INT (nw_meet_sps_block) <= 0.365 ABUT<90 OPPOSITE) COIN EDGE nw_meet_sps_sides
 err2 = (nw_meet_sps_block WITH WIDTH > 0.365) WITH EDGE nw_meet_sps_sides
 err1 NOT INSIDE EDGE INST
 err2 NOT INSIDE INST
}

Q: IO_PW width, when the space <= 0.235um, except INST region <= 0.365um
A: 
NW_W_4e {
@ IO_PW width, when the space <= 0.235um, except INST region <= 0.365um
 nw_meet_sps_sides = EXT [IO_PW] <= 0.235 ABUT<90 OPPOSITE
 nw_meet_sps_block = IO_PW WITH EDGE nw_meet_sps_sides
 err1 = (INT (nw_meet_sps_block) <= 0.365 ABUT<90 OPPOSITE) COIN EDGE nw_meet_sps_sides
//; err2 = (nw_meet_sps_block WITH WIDTH > 0.365) WITH EDGE nw_meet_sps_sides  //; cause confused output
 err1 NOT INSIDE EDGE INST
//; err2 NOT INSIDE SealR_NOT_BULK
}

Q: (NW OR DG) width, when the space <= 0.235um. <= 0.365um
A: 
NW_W_5 {
@ (NW OR DG) width, when the space <= 0.235um. <= 0.365um
 nw_meet_sps_sides = EXT [DG_or_NW] <= 0.235 ABUT<90 OPPOSITE
 nw_meet_sps_block = DG_or_NW WITH EDGE nw_meet_sps_sides
 err1 = (INT (nw_meet_sps_block) <= 0.365 ABUT<90 OPPOSITE) COIN EDGE nw_meet_sps_sides
 err2 = (nw_meet_sps_block WITH WIDTH > 0.365) WITH EDGE nw_meet_sps_sides
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

//PSUB

Q: PSUB width >= 0.214um
A: 
PSUB_W_1 {
@ PSUB width >= 0.214um
 err1 = INT PSUB < 0.214 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

//SVT_N

Q: SVT_N width, single-point-interaction is allowed >= 0.192um
    DRC waive:
    1) SVT_N one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
    3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
SVT_N_W_1 {
@ SVT_N width, single-point-interaction is allowed >= 0.192um
@ DRC waive:
@ 1) SVT_N one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
@ 3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = INT [SVT_N] < 0.192 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = INT [SVT_N] < 0.192 CORNER
 y3 = INT [SVT_N_v_edges] >= 0.09 < 0.107 PROJ == 0
 y4 = INT [SVT_N_v_edges] >= 0.18 < 0.213 PROJ == 0
 y5 = INT [SVT_N_h_edges] >= 0.09 < 0.107 PROJ == 0
 y6 = INT [SVT_N_h_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = (y3 OR EDGE y4) OR EDGE (y5 OR EDGE y6)

 waive_edges = SVT_N_90_90_jog_180_135_144 COIN EDGE SVT_N_h_edges
 waive_corner = INT [SVT_N_v_edges] waive_edges < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE waive_corner
 err2 = (y2 COIN EDGE SVT_N_concave_corner) NOT TOUCH EDGE y_all
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: SVT_N width in S/D direction, single-point-interaction is allowed >= 0.27um
    DRC waive:
    1) SVT_N one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
    3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
SVT_N_W_2 {
@ SVT_N width in S/D direction, single-point-interaction is allowed >= 0.27um
@ DRC waive:
@ 1) SVT_N one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
@ 3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = INT [SVT_N_v_edges] < 0.27 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = INT [SVT_N_v_edges] >= 0.09 < 0.107 PROJ == 0
 y3 = INT [SVT_N_v_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = y2 OR EDGE y3

 waive_edges = SVT_N_90_90_jog_180_192_225_240_135_144 COIN EDGE SVT_N_h_edges
 waive_corner = INT [SVT_N_v_edges] waive_edges < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE waive_corner
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: SVT_N width in S/D direction, when one SVT_N vertical edge CUT (GTMK1 OR AR) and ABUT HVT_N >= 0.315um
    DRC waive: 
    1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
    2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
SVT_N_W_3 {
@ SVT_N width in S/D direction, when one SVT_N vertical edge CUT (GTMK1 OR AR) and ABUT HVT_N >= 0.315um
@ DRC waive: 
@ 1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
@ 2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = (SVT_N_v_edges INSIDE EDGE gtmk1_or_ar) COIN EDGE HVT_N
 y2 = SVT_N_v_edges TOUCH EDGE y1

 waive_corner = INT SVT_N_v_edges SVT_N_90_90_jog_180_192_225_240_135_144_h_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = SVT_N_v_edges NOT TOUCH EDGE waive_corner
 err1 = INT y2 check_corner < 0.315 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: SVT_N width in GATE poly direction when SVT_N point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction
    (except L-shape/T-shape concave corner) >= 0.238um
A: 
SVT_N_W_4 {
@ SVT_N width in GATE poly direction when SVT_N point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction
@ (except L-shape/T-shape concave corner) >= 0.238um
 err1 = INT (SVT_N_h_edges_singular_point COIN EDGE SVT_N_concave_corner) SVT_N_h_edges < 0.238 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK

 y1 = SVT_N_convex_eqlt_1_edges COIN EDGE SVT_N_h_edges
 y2 = SVT_N COIN EDGE (EXPAND EDGE (y1 COIN EDGE SVT_N_concave_corner) INSIDE BY 0.001 OUTSIDE BY 0.001)
 y3 = INT [y2] >= 0.09 <= 0.106+0.0005 ABUT<90 PROJ == 0
 y4 = INT [y2] >= 0.18 <= 0.212+0.0005 ABUT<90 PROJ == 0
 y5 = SVT_N_concave_corner WITH EDGE (SVT_N_concave_corner COIN EDGE (y3 OR EDGE y4))
 y6 = SVT_N_h_edges COIN EDGE y5
 err2 = INT SVT_N_h_edges y6 < 0.238 ABUT<90 OPPOSITE REGION
 err3 = (LENGTH ((SVT_N_v_edges TOUCH EDGE y5) TOUCH EDGE SVT_N_convex_eq_1_edges) < 0.238) EXPAND EDGE INSIDE BY 0.001
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

//SVT_P

Q: SVT_P width, single-point-interaction is allowed >= 0.192um
    DRC waive:
    1) SVT_P one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
    3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
SVT_P_W_1 {
@ SVT_P width, single-point-interaction is allowed >= 0.192um
@ DRC waive:
@ 1) SVT_P one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
@ 3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = INT [SVT_P] < 0.192 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = INT [SVT_P] < 0.192 CORNER
 y3 = INT [SVT_P_v_edges] >= 0.09 < 0.107 PROJ == 0
 y4 = INT [SVT_P_v_edges] >= 0.18 < 0.213 PROJ == 0
 y5 = INT [SVT_P_h_edges] >= 0.09 < 0.107 PROJ == 0
 y6 = INT [SVT_P_h_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = (y3 OR EDGE y4) OR EDGE (y5 OR EDGE y6)

 waive_edges = SVT_P_90_90_jog_180_135_144 COIN EDGE SVT_P_h_edges
 waive_corner = INT [SVT_P_v_edges] waive_edges < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE waive_corner
 err2 = (y2 COIN EDGE SVT_P_concave_corner) NOT TOUCH EDGE y_all
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: SVT_P width in S/D direction, single-point-interaction is allowed >= 0.270um
    DRC waive:
    1) SVT_P one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
    3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
SVT_P_W_2 {
@ SVT_P width in S/D direction, single-point-interaction is allowed >= 0.270um
@ DRC waive:
@ 1) SVT_P one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
@ 3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = INT [SVT_P_v_edges] < 0.27 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = INT [SVT_P_v_edges] >= 0.09 < 0.107 PROJ == 0
 y3 = INT [SVT_P_v_edges] >= 0.18 < 0.213 PROJ == 0
 y4 = y2 OR EDGE y3

 waive_corner = INT [SVT_P_v_edges] SVT_P_90_90_jog_180_192_225_240_135_144_h_edges < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y4) NOT TOUCH EDGE waive_corner
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: SVT_P width in S/D direction, when SVT_P vertical edge CUT (GTMK1 OR AR) and ABUT HVT_P >= 0.315um
    DRC waive: 
    1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
    2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
SVT_P_W_3 {
@ SVT_P width in S/D direction, when SVT_P vertical edge CUT (GTMK1 OR AR) and ABUT HVT_P >= 0.315um
@ DRC waive: 
@ 1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
@ 2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = (SVT_P_v_edges INSIDE EDGE gtmk1_or_ar) COIN EDGE HVT_P
 y2 = SVT_P_v_edges TOUCH EDGE y1

 waive_corner = INT SVT_P_v_edges SVT_P_90_90_jog_180_192_225_240_135_144_h_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = SVT_P_v_edges NOT TOUCH EDGE waive_corner
 err1 = INT y2 check_corner < 0.315 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: SVT_P width in GATE poly direction when SVT_P point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction (except L-shape/T-shape concave corner) >= 0.238um
A: 
SVT_P_W_4 {
@ SVT_P width in GATE poly direction when SVT_P point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction (except L-shape/T-shape concave corner) >= 0.238um
 err1 = INT (SVT_P_h_edges_singular_point COIN EDGE SVT_P_concave_corner) SVT_P_h_edges < 0.238 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK

 y1 = SVT_P_convex_eqlt_1_edges COIN EDGE SVT_P_h_edges
 y2 = SVT_P COIN EDGE (EXPAND EDGE (y1 COIN EDGE SVT_P_concave_corner) INSIDE BY 0.001 OUTSIDE BY 0.001)
 y3 = INT [y2] >= 0.09 <= 0.106+0.0005 ABUT<90 PROJ == 0
 y4 = INT [y2] >= 0.18 <= 0.212+0.0005 ABUT<90 PROJ == 0
 y5 = SVT_P_concave_corner WITH EDGE (SVT_P_concave_corner COIN EDGE (y3 OR EDGE y4))
 y6 = SVT_P_h_edges COIN EDGE y5
 err2 = INT SVT_P_h_edges y6 < 0.238 ABUT<90 OPPOSITE REGION
 err3 = (LENGTH ((SVT_P_v_edges TOUCH EDGE y5) TOUCH EDGE SVT_P_convex_eq_1_edges) < 0.238) EXPAND EDGE INSIDE BY 0.001
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

//HVT_N

Q: HVT_N width, single-point-interaction is allowed >= 0.192um
    DRC waive:
    1) HVT_N one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
    3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
HVT_N_W_1 {
@ HVT_N width, single-point-interaction is allowed >= 0.192um
@ DRC waive:
@ 1) HVT_N one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
@ 3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = INT [HVT_N] < 0.192 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = INT [HVT_N] < 0.192 CORNER
 y3 = INT [HVT_N_v_edges] >= 0.09 < 0.107 PROJ == 0
 y4 = INT [HVT_N_v_edges] >= 0.18 < 0.213 PROJ == 0
 y5 = INT [HVT_N_h_edges] >= 0.09 < 0.107 PROJ == 0
 y6 = INT [HVT_N_h_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = (y3 OR EDGE y4) OR EDGE (y5 OR EDGE y6)

 waive_edges = HVT_N_90_90_jog_180_135_144 COIN EDGE HVT_N_h_edges
 waive_corner = INT [HVT_N_v_edges] waive_edges < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE waive_corner
 err2 = (y2 COIN EDGE HVT_N_concave_corner) NOT TOUCH EDGE y_all
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: HVT_N width in S/D direction, single-point-interaction is allowed >= 0.27um
    DRC waive:
    1) HVT_N one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
    3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
HVT_N_W_2 {
@ HVT_N width in S/D direction, single-point-interaction is allowed >= 0.27um
@ DRC waive:
@ 1) HVT_N one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
@ 3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = INT [HVT_N_v_edges] < 0.27 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = INT [HVT_N_v_edges] >= 0.09 < 0.107 PROJ == 0
 y3 = INT [HVT_N_v_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = y2 OR EDGE y3

 waive_edges = HVT_N_90_90_jog_180_192_225_240_135_144 COIN EDGE HVT_N_h_edges
 waive_corner = INT [HVT_N_v_edges] waive_edges < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE waive_corner
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: HVT_N width in GATE poly direction when HVT_N point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction (except L-shape/T-shape concave corner) >= 0.238um
A: 
HVT_N_W_3 {
@ HVT_N width in GATE poly direction when HVT_N point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction (except L-shape/T-shape concave corner) >= 0.238um
 err1 = INT (HVT_N_h_edges_singular_point COIN EDGE HVT_N_concave_corner) HVT_N_h_edges < 0.238 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK

 y1 = HVT_N_convex_eqlt_1_edges COIN EDGE HVT_N_h_edges
 y2 = HVT_N COIN EDGE (EXPAND EDGE (y1 COIN EDGE HVT_N_concave_corner) INSIDE BY 0.001 OUTSIDE BY 0.001)
 y3 = INT [y2] >= 0.09 <= 0.106+0.0005 ABUT<90 PROJ == 0
 y4 = INT [y2] >= 0.18 <= 0.212+0.0005 ABUT<90 PROJ == 0
 y5 = HVT_N_concave_corner WITH EDGE (HVT_N_concave_corner COIN EDGE (y3 OR EDGE y4))
 y6 = HVT_N_h_edges COIN EDGE y5
 err2 = INT HVT_N_h_edges y6 < 0.238 ABUT<90 OPPOSITE REGION
 err3 = (LENGTH ((HVT_N_v_edges TOUCH EDGE y5) TOUCH EDGE HVT_N_convex_eq_1_edges) < 0.238) EXPAND EDGE INSIDE BY 0.001
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

//HVT_P

Q: HVT_P width, single-point-interaction is allowed >= 0.192um
    DRC waive:
    1) HVT_P one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
    3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
HVT_P_W_1 {
@ HVT_P width, single-point-interaction is allowed >= 0.192um
@ DRC waive:
@ 1) HVT_P one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
@ 3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = INT [HVT_P] < 0.192 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = INT [HVT_P] < 0.192 CORNER
 y3 = INT [HVT_P_v_edges] >= 0.09 < 0.107 PROJ == 0
 y4 = INT [HVT_P_v_edges] >= 0.18 < 0.213 PROJ == 0
 y5 = INT [HVT_P_h_edges] >= 0.09 < 0.107 PROJ == 0
 y6 = INT [HVT_P_h_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = (y3 OR EDGE y4) OR EDGE (y5 OR EDGE y6)

 waive_edges = HVT_P_90_90_jog_180_135_144 COIN EDGE HVT_P_h_edges
 waive_corner = INT [HVT_P_v_edges] waive_edges < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE waive_corner
 err2 = (y2 COIN EDGE HVT_P_concave_corner) NOT TOUCH EDGE y_all
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: HVT_P width in S/D direction, single-point-interaction is allowed >= 0.27um
    DRC waive:
    1) HVT_P one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
    3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
HVT_P_W_2 {
@ HVT_P width in S/D direction, single-point-interaction is allowed >= 0.27um
@ DRC waive:
@ 1) HVT_P one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
@ 3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = INT [HVT_P_v_edges] < 0.27 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = INT [HVT_P_v_edges] >= 0.09 < 0.107 PROJ == 0
 y3 = INT [HVT_P_v_edges] >= 0.18 < 0.213 PROJ == 0
 y4 = y2 OR EDGE y3

 waive_corner = INT [HVT_P_v_edges] HVT_P_90_90_jog_180_192_225_240_135_144_h_edges < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y4) NOT TOUCH EDGE waive_corner
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: HVT_P width in GATE poly direction when HVT_P point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction (except L-shape/T-shape concave corner) >= 0.238um
A: 
HVT_P_W_3 {
@ HVT_P width in GATE poly direction when HVT_P point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction (except L-shape/T-shape concave corner) >= 0.238um
 err1 = INT (HVT_P_h_edges_singular_point COIN EDGE HVT_P_concave_corner) HVT_P_h_edges < 0.238 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK

 y1 = HVT_P_convex_eqlt_1_edges COIN EDGE HVT_P_h_edges
 y2 = HVT_P COIN EDGE (EXPAND EDGE (y1 COIN EDGE HVT_P_concave_corner) INSIDE BY 0.001 OUTSIDE BY 0.001)
 y3 = INT [y2] >= 0.09 <= 0.106+0.0005 ABUT<90 PROJ == 0
 y4 = INT [y2] >= 0.18 <= 0.212+0.0005 ABUT<90 PROJ == 0
 y5 = HVT_P_concave_corner WITH EDGE (HVT_P_concave_corner COIN EDGE (y3 OR EDGE y4))
 y6 = HVT_P_h_edges COIN EDGE y5
 err2 = INT HVT_P_h_edges y6 < 0.238 ABUT<90 OPPOSITE REGION
 err3 = (LENGTH ((HVT_P_v_edges TOUCH EDGE y5) TOUCH EDGE HVT_P_convex_eq_1_edges) < 0.238) EXPAND EDGE INSIDE BY 0.001
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

//LVT_N

Q: LVT_N width, single-point-interaction is allowed >= 0.192um
    DRC waive:
   1) LVT_N one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
   2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
   3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LVT_N_W_1 {
@ LVT_N width, single-point-interaction is allowed >= 0.192um
@ DRC waive:
@ 1) LVT_N one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
@ 3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = INT [LVT_N] < 0.192 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = INT [LVT_N] < 0.192 CORNER
 y3 = INT [LVT_N_v_edges] >= 0.09 < 0.107 PROJ == 0
 y4 = INT [LVT_N_v_edges] >= 0.18 < 0.213 PROJ == 0
 y5 = INT [LVT_N_h_edges] >= 0.09 < 0.107 PROJ == 0
 y6 = INT [LVT_N_h_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = (y3 OR EDGE y4) OR EDGE (y5 OR EDGE y6)

 waive_edges = LVT_N_90_90_jog_180_135_144 COIN EDGE LVT_N_h_edges
 waive_corner = INT [LVT_N_v_edges] waive_edges < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE waive_corner
 err2 = (y2 COIN EDGE LVT_N_concave_corner) NOT TOUCH EDGE y_all
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: LVT_N width in S/D direction, single-point-interaction is allowed >= 0.27um
    DRC waive:
    1) LVT_N one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
    3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LVT_N_W_2 {
@ LVT_N width in S/D direction, single-point-interaction is allowed >= 0.27um
@ DRC waive:
@ 1) LVT_N one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
@ 3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = INT [LVT_N_v_edges] < 0.27 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = INT [LVT_N_v_edges] >= 0.09 < 0.107 PROJ == 0
 y3 = INT [LVT_N_v_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = y2 OR EDGE y3

 waive_edges = LVT_N_90_90_jog_180_192_225_240_135_144 COIN EDGE LVT_N_h_edges
 waive_corner = INT [LVT_N_v_edges] waive_edges < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE waive_corner
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: LVT_N width in S/D direction when just one LVT_N vertical edge CUT (GTMK1 OR AR), and ABUT SVT_N or HVT_N >= 0.315um
    DRC waive:
    1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
    2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LVT_N_W_3a {
@ LVT_N width in S/D direction when just one LVT_N vertical edge CUT (GTMK1 OR AR), and ABUT SVT_N or HVT_N >= 0.315um
@ DRC waive:
@ 1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
@ 2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = ((LVT_N_v_edges INSIDE EDGE gtmk1_or_ar) COIN EDGE SVT_N) OR EDGE ((LVT_N_v_edges INSIDE EDGE gtmk1_or_ar) COIN EDGE HVT_N)
 y2 = LVT_N_v_edges TOUCH EDGE y1

 waive_corner = INT LVT_N_v_edges LVT_N_90_90_jog_180_192_225_240_135_144_h_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = LVT_N_v_edges NOT TOUCH EDGE waive_corner
 err1 = INT y2 check_corner < 0.315 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: LVT_N width in S/D direction when both two LVT_N’s vertical edges CUT (GTMK1 OR AR) and ABUT SVT_N or HVT_N >= 0.36um
    DRC waive:
    1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
    2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LVT_N_W_3b {
@ LVT_N width in S/D direction when both two LVT_N’s vertical edges CUT (GTMK1 OR AR) and ABUT SVT_N or HVT_N >= 0.36um
@ DRC waive:
@ 1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
@ 2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = ((LVT_N_v_edges INSIDE EDGE gtmk1_or_ar) COIN EDGE SVT_N) OR EDGE ((LVT_N_v_edges INSIDE EDGE gtmk1_or_ar) COIN EDGE HVT_N)
 y2 = LVT_N_v_edges TOUCH EDGE y1

 waive_corner = INT LVT_N_v_edges LVT_N_90_90_jog_180_192_225_240_135_144_h_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = (LVT_N_v_edges NOT TOUCH EDGE waive_corner) TOUCH EDGE y1
 err1 = INT y2 check_corner < 0.360 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: LVT_N width in GATE poly direction when LVT_N point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction (except L-shape/T-shape concave corner) >= 0.238um
A: 
LVT_N_W_4 {
@ LVT_N width in GATE poly direction when LVT_N point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction (except L-shape/T-shape concave corner) >= 0.238um
 err1 = INT (LVT_N_h_edges_singular_point COIN EDGE LVT_N_concave_corner) LVT_N_h_edges < 0.238 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK

 y1 = LVT_N_convex_eqlt_1_edges COIN EDGE LVT_N_h_edges
 y2 = LVT_N COIN EDGE (EXPAND EDGE (y1 COIN EDGE LVT_N_concave_corner) INSIDE BY 0.001 OUTSIDE BY 0.001)
 y3 = INT [y2] >= 0.09 <= 0.106+0.0005 ABUT<90 PROJ == 0
 y4 = INT [y2] >= 0.18 <= 0.212+0.0005 ABUT<90 PROJ == 0
 y5 = LVT_N_concave_corner WITH EDGE (LVT_N_concave_corner COIN EDGE (y3 OR EDGE y4))
 y6 = LVT_N_h_edges COIN EDGE y5
 err2 = INT LVT_N_h_edges y6 < 0.238 ABUT<90 OPPOSITE REGION
 err3 = (LENGTH ((LVT_N_v_edges TOUCH EDGE y5) TOUCH EDGE LVT_N_convex_eq_1_edges) < 0.238) EXPAND EDGE INSIDE BY 0.001
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

//LVT_P

Q: LVT_P width, single-point-interaction is allowed >= 0.192um
    DRC waive:
    1) LVT_P one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
    3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LVT_P_W_1 {
@ LVT_P width, single-point-interaction is allowed >= 0.192um
@ DRC waive:
@ 1) LVT_P one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
@ 3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = INT [LVT_P] < 0.192 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = INT [LVT_P] < 0.192 CORNER
 y3 = INT [LVT_P_v_edges] >= 0.09 < 0.107 PROJ == 0
 y4 = INT [LVT_P_v_edges] >= 0.18 < 0.213 PROJ == 0
 y5 = INT [LVT_P_h_edges] >= 0.09 < 0.107 PROJ == 0
 y6 = INT [LVT_P_h_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = (y3 OR EDGE y4) OR EDGE (y5 OR EDGE y6)

 waive_edges = LVT_P_90_90_jog_180_135_144 COIN EDGE LVT_P_h_edges
 waive_corner = INT [LVT_P_v_edges] waive_edges < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE waive_corner
 err2 = (y2 COIN EDGE LVT_P_concave_corner) NOT TOUCH EDGE y_all
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: LVT_P width in S/D direction, single-point-interaction is allowed >= 0.27um
    DRC waive:
    1) LVT_P one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
    3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LVT_P_W_2 {
@ LVT_P width in S/D direction, single-point-interaction is allowed >= 0.27um
@ DRC waive:
@ 1) LVT_P one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
@ 3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = INT [LVT_P_v_edges] < 0.27 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = INT [LVT_P_v_edges] >= 0.09 < 0.107 PROJ == 0
 y3 = INT [LVT_P_v_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = y2 OR EDGE y3

 waive_corner = INT [LVT_P_v_edges] LVT_P_90_90_jog_180_192_225_240_135_144_h_edges < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE waive_corner
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: LVT_P width in S/D direction when just one LVT_P vertical edge CUT (GTMK1 OR AR) and ABUT SVT_P or HVT_P >= 0.315um
    DRC waive:
    1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
    2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LVT_P_W_3 {
@ LVT_P width in S/D direction when just one LVT_P vertical edge CUT (GTMK1 OR AR) and ABUT SVT_P or HVT_P >= 0.315um
@ DRC waive:
@ 1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
@ 2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = ((LVT_P_v_edges INSIDE EDGE gtmk1_or_ar) COIN EDGE SVT_P) OR EDGE ((LVT_P_v_edges INSIDE EDGE gtmk1_or_ar) COIN EDGE HVT_P)
 y2 = LVT_P_v_edges TOUCH EDGE y1

 waive_corner = INT LVT_P_v_edges LVT_P_90_90_jog_180_192_225_240_135_144_h_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = LVT_P_v_edges NOT TOUCH EDGE waive_corner
 err1 = INT y2 check_corner < 0.315 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: LVT_P width in S/D direction when both LVT_P vertical edge CUT (GTMK1 OR AR) and ABUT SVT_P or HVT_P >= 0.36um
    DRC waive:
    1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
    2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LVT_P_W_3a {
@ LVT_P width in S/D direction when both LVT_P vertical edge CUT (GTMK1 OR AR) and ABUT SVT_P or HVT_P >= 0.36um
@ DRC waive:
@ 1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
@ 2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = ((LVT_P_v_edges INSIDE EDGE gtmk1_or_ar) COIN EDGE SVT_P) OR EDGE ((LVT_P_v_edges INSIDE EDGE gtmk1_or_ar) COIN EDGE HVT_P)
 y2 = LVT_P_v_edges TOUCH EDGE y1

 waive_corner = INT LVT_P_v_edges LVT_P_90_90_jog_180_192_225_240_135_144_h_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = (LVT_P_v_edges NOT TOUCH EDGE waive_corner) TOUCH EDGE y1
 err1 = INT y2 check_corner < 0.360 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: LVT_P width in GATE poly direction when LVT_P point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction (except L-shape/T-shape concave corner) >= 0.238um
A: 
LVT_P_W_4 {
@ LVT_P width in GATE poly direction when LVT_P point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction (except L-shape/T-shape concave corner) >= 0.238um
 err1 = INT (LVT_P_h_edges_singular_point COIN EDGE LVT_P_concave_corner) LVT_P_h_edges < 0.238 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK

 y1 = LVT_P_convex_eqlt_1_edges COIN EDGE LVT_P_h_edges
 y2 = LVT_P COIN EDGE (EXPAND EDGE (y1 COIN EDGE LVT_P_concave_corner) INSIDE BY 0.001 OUTSIDE BY 0.001)
 y3 = INT [y2] >= 0.09 <= 0.106+0.0005 ABUT<90 PROJ == 0
 y4 = INT [y2] >= 0.18 <= 0.212+0.0005 ABUT<90 PROJ == 0
 y5 = LVT_P_concave_corner WITH EDGE (LVT_P_concave_corner COIN EDGE (y3 OR EDGE y4))
 y6 = LVT_P_h_edges COIN EDGE y5
 err2 = INT LVT_P_h_edges y6 < 0.238 ABUT<90 OPPOSITE REGION
 err3 = (LENGTH ((LVT_P_v_edges TOUCH EDGE y5) TOUCH EDGE LVT_P_convex_eq_1_edges) < 0.238) EXPAND EDGE INSIDE BY 0.001
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

//ULVT_N
Q: ULVT_N width, single-point-interaction is allowed >= 0.192um
    DRC waive:
    1) ULVT_N one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
    3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
ULVT_N_W_1 {
@ ULVT_N width, single-point-interaction is allowed >= 0.192um
@ DRC waive:
@ 1) ULVT_N one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
@ 3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = INT [ULVT_N] < 0.192 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = INT [ULVT_N] < 0.192 CORNER
 y3 = INT [ULVT_N_v_edges] >= 0.09 < 0.107 PROJ == 0
 y4 = INT [ULVT_N_v_edges] >= 0.18 < 0.213 PROJ == 0
 y5 = INT [ULVT_N_h_edges] >= 0.09 < 0.107 PROJ == 0
 y6 = INT [ULVT_N_h_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = (y3 OR EDGE y4) OR EDGE (y5 OR EDGE y6)

 waive_edges = ULVT_N_90_90_jog_180_135_144 COIN EDGE ULVT_N_h_edges
 waive_corner = INT [ULVT_N_v_edges] waive_edges < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE waive_corner
 err2 = (y2 COIN EDGE ULVT_N_concave_corner) NOT TOUCH EDGE y_all
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: ULVT_N width in S/D direction, single-point-interaction is allowed >= 0.27um
    DRC waive:
    1) ULVT_N one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
    3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
ULVT_N_W_2 {
@ ULVT_N width in S/D direction, single-point-interaction is allowed >= 0.27um
@ DRC waive:
@ 1) ULVT_N one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
@ 3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = INT [ULVT_N_v_edges] < 0.27 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = INT [ULVT_N_v_edges] >= 0.09 < 0.107 PROJ == 0
 y3 = INT [ULVT_N_v_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = y2 OR EDGE y3

 waive_edges = ULVT_N_90_90_jog_180_192_225_240_135_144 COIN EDGE ULVT_N_h_edges
 waive_corner = INT [ULVT_N_v_edges] waive_edges < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE waive_corner
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: ULVT_N width when just one vertical edge CUT (GTMK1 OR AR)) in S/D direction >= 0.315um
    DRC waive:
    1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
    2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
ULVT_N_W_3a {
@ ULVT_N width when just one vertical edge CUT (GTMK1 OR AR)) in S/D direction >= 0.315um
@ DRC waive:
@ 1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
@ 2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 check_edges = ULVT_N_v_edges TOUCH EDGE (ULVT_N_v_edges INSIDE EDGE gtmk1_or_ar)
 waive_corner = INT ULVT_N_v_edges ULVT_N_90_90_jog_180_192_225_240_135_144_h_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = ULVT_N_v_edges NOT TOUCH EDGE waive_corner
 err1 = INT check_edges check_corner < 0.315 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: ULVT_N width when both vertical ULVT_N edges CUT (GTMK1 OR AR) in S/D direction >= 0.36um
    DRC waive:
    1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
    2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
ULVT_N_W_3b {
@ ULVT_N width when both vertical ULVT_N edges CUT (GTMK1 OR AR) in S/D direction >= 0.36um
@ DRC waive:
@ 1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
@ 2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 waive_corner = INT ULVT_N_v_edges ULVT_N_90_90_jog_180_192_225_240_135_144_h_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_edges = ULVT_N_inside_AA_side_mark_v_edges NOT TOUCH EDGE waive_corner
 err1 = INT check_edges < 0.36 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: ULVT_N width in GATE poly direction when ULVT_N point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction (except L-shape/T-shape concave corner) >= 0.238um
A: 
ULVT_N_W_4 {
@ ULVT_N width in GATE poly direction when ULVT_N point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction (except L-shape/T-shape concave corner) >= 0.238um
 err1 = INT (ULVT_N_h_edges_singular_point COIN EDGE ULVT_N_concave_corner) ULVT_N_h_edges < 0.238 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK

 y1 = ULVT_N_convex_eqlt_1_edges COIN EDGE ULVT_N_h_edges
 y2 = ULVT_N COIN EDGE (EXPAND EDGE (y1 COIN EDGE ULVT_N_concave_corner) INSIDE BY 0.001 OUTSIDE BY 0.001)
 y3 = INT [y2] >= 0.09 <= 0.106+0.0005 ABUT<90 PROJ == 0
 y4 = INT [y2] >= 0.18 <= 0.212+0.0005 ABUT<90 PROJ == 0
 y5 = ULVT_N_concave_corner WITH EDGE (ULVT_N_concave_corner COIN EDGE (y3 OR EDGE y4))
 y6 = ULVT_N_h_edges COIN EDGE y5
 err2 = INT ULVT_N_h_edges y6 < 0.238 ABUT<90 OPPOSITE REGION
 err3 = (LENGTH ((ULVT_N_v_edges TOUCH EDGE y5) TOUCH EDGE ULVT_N_convex_eq_1_edges) < 0.238) EXPAND EDGE INSIDE BY 0.001
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

//ULVT_P

Q: ULVT_P width, single-point-interaction is allowed >= 0.192um
    DRC waive:
    1) ULVT_P one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
    3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
ULVT_P_W_1 {
@ ULVT_P width, single-point-interaction is allowed >= 0.192um
@ DRC waive:
@ 1) ULVT_P one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
@ 3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = INT [ULVT_P] < 0.192 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = INT [ULVT_P] < 0.192 CORNER
 y3 = INT [ULVT_P_v_edges] >= 0.09 < 0.107 PROJ == 0
 y4 = INT [ULVT_P_v_edges] >= 0.18 < 0.213 PROJ == 0
 y5 = INT [ULVT_P_h_edges] >= 0.09 < 0.107 PROJ == 0
 y6 = INT [ULVT_P_h_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = (y3 OR EDGE y4) OR EDGE (y5 OR EDGE y6)

 waive_edges = ULVT_P_90_90_jog_180_135_144 COIN EDGE ULVT_P_h_edges
 waive_corner = INT [ULVT_P_v_edges] waive_edges < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE waive_corner
 err2 = (y2 COIN EDGE ULVT_P_concave_corner) NOT TOUCH EDGE y_all
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: ULVT_P width in S/D direction, single-point-interaction is allowed >= 0.27um
    DRC waive:
    1) ULVT_P one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
    3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
ULVT_P_W_2 {
@ ULVT_P width in S/D direction, single-point-interaction is allowed >= 0.27um
@ DRC waive:
@ 1) ULVT_P one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
@ 3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = INT [ULVT_P_v_edges] < 0.27 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = INT [ULVT_P_v_edges] >= 0.09 < 0.107 PROJ == 0
 y3 = INT [ULVT_P_v_edges] >= 0.18 < 0.213 PROJ == 0
 y4 = y2 OR EDGE y3

 waive_corner = INT [ULVT_P_v_edges] ULVT_P_90_90_jog_180_192_225_240_135_144_h_edges < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y4) NOT TOUCH EDGE waive_corner
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: ULVT_P width when just one vertical edge CUT (GTMK1 OR AR) in S/D direction >= 0.315um
    DRC waive:
    1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
    2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
ULVT_P_W_3a {
@ ULVT_P width when just one vertical edge CUT (GTMK1 OR AR) in S/D direction >= 0.315um
@ DRC waive:
@ 1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
@ 2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 check_edges = ULVT_P_v_edges TOUCH EDGE (ULVT_P_v_edges INSIDE EDGE gtmk1_or_ar)
 waive_corner = INT ULVT_P_v_edges ULVT_P_90_90_jog_180_192_225_240_135_144_h_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = ULVT_P_v_edges NOT TOUCH EDGE waive_corner
 err1 = INT check_edges check_corner < 0.315 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: ULVT_P width when both vertical ULVT_P edge CUT (GTMK1 OR AR) in S/D direction >= 0.36um
    DRC waive:
    1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
    2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
ULVT_P_W_3b {
@ ULVT_P width when both vertical ULVT_P edge CUT (GTMK1 OR AR) in S/D direction >= 0.36um
@ DRC waive:
@ 1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
@ 2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 waive_corner = INT ULVT_P_v_edges ULVT_P_90_90_jog_180_192_225_240_135_144_h_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_edges = ULVT_P_inside_AA_side_mark_v_edges NOT TOUCH EDGE waive_corner
 err1 = INT check_edges < 0.36 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: ULVT_P width in GATE poly direction when ULVT_P point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction (except L-shape/T-shape concave corner) >= 0.238um
A: 
ULVT_P_W_4 {
@ ULVT_P width in GATE poly direction when ULVT_P point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction (except L-shape/T-shape concave corner) >= 0.238um
 err1 = INT (ULVT_P_h_edges_singular_point COIN EDGE ULVT_P_concave_corner) ULVT_P_h_edges < 0.238 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK

 y1 = ULVT_P_convex_eqlt_1_edges COIN EDGE ULVT_P_h_edges
 y2 = ULVT_P COIN EDGE (EXPAND EDGE (y1 COIN EDGE ULVT_P_concave_corner) INSIDE BY 0.001 OUTSIDE BY 0.001)
 y3 = INT [y2] >= 0.09 <= 0.106+0.0005 ABUT<90 PROJ == 0
 y4 = INT [y2] >= 0.18 <= 0.212+0.0005 ABUT<90 PROJ == 0
 y5 = ULVT_P_concave_corner WITH EDGE (ULVT_P_concave_corner COIN EDGE (y3 OR EDGE y4))
 y6 = ULVT_P_h_edges COIN EDGE y5
 err2 = INT ULVT_P_h_edges y6 < 0.238 ABUT<90 OPPOSITE REGION
 err3 = (LENGTH ((ULVT_P_v_edges TOUCH EDGE y5) TOUCH EDGE ULVT_P_convex_eq_1_edges) < 0.238) EXPAND EDGE INSIDE BY 0.001
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

//LFN_N
Q: LFN_N width, single-point-interaction is allowed >= 0.192um
    DRC waive:
    1) LFN_N one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
    3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LFN_N_W_1 {
@ LFN_N width, single-point-interaction is allowed >= 0.192um
@ DRC waive:
@ 1) LFN_N one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
@ 3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = INT [LFN_N] < 0.192 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = INT [LFN_N] < 0.192 CORNER
 y3 = INT [LFN_N_v_edges] >= 0.09 < 0.107 PROJ == 0
 y4 = INT [LFN_N_v_edges] >= 0.18 < 0.213 PROJ == 0
 y5 = INT [LFN_N_h_edges] >= 0.09 < 0.107 PROJ == 0
 y6 = INT [LFN_N_h_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = (y3 OR EDGE y4) OR EDGE (y5 OR EDGE y6)

 waive_edges = LFN_N_90_90_jog_180_135_144 COIN EDGE LFN_N_h_edges
 waive_corner = INT [LFN_N_v_edges] waive_edges < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE waive_corner
 err2 = (y2 COIN EDGE LFN_N_concave_corner) NOT TOUCH EDGE y_all
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: LFN_N width in S/D direction, single-point-interaction is allowed >= 0.27um
    DRC waive:
    1) LFN_N one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
    3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LFN_N_W_2 {
@ LFN_N width in S/D direction, single-point-interaction is allowed >= 0.27um
@ DRC waive:
@ 1) LFN_N one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
@ 3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = INT [LFN_N_v_edges] < 0.27 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = INT [LFN_N_v_edges] >= 0.09 < 0.107 PROJ == 0
 y3 = INT [LFN_N_v_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = y2 OR EDGE y3

 waive_edges = LFN_N_90_90_jog_180_192_225_240_135_144 COIN EDGE LFN_N_h_edges
 waive_corner = INT [LFN_N_v_edges] waive_edges < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE waive_corner
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: LFN_N width in S/D direction, when one LFN_N vertical edge CUT (GTMK1 OR AR) and ABUT HVT_N >= 0.315um
    DRC waive:
    1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
    2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LFN_N_W_3 {
@ LFN_N width in S/D direction, when one LFN_N vertical edge CUT (GTMK1 OR AR) and ABUT HVT_N >= 0.315um
@ DRC waive:
@ 1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
@ 2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 check_edges = (LFN_N_v_edges TOUCH EDGE (LFN_N_v_edges INSIDE EDGE gtmk1_or_ar)) COIN EDGE HVT_N
 waive_corner = INT LFN_N_v_edges LFN_N_90_90_jog_180_192_225_240_135_144_h_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = LFN_N_v_edges NOT TOUCH EDGE waive_corner
 err1 = INT check_edges check_corner < 0.315 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: LFN_N width in GATE poly direction when LFN_N point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction (except L-shape/T-shape concave corner) >= 0.238um
A: 
LFN_N_W_4 {
@ LFN_N width in GATE poly direction when LFN_N point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction (except L-shape/T-shape concave corner) >= 0.238um
 err1 = INT (LFN_N_h_edges_singular_point COIN EDGE LFN_N_concave_corner) LFN_N_h_edges < 0.238 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK

 y1 = LFN_N_convex_eqlt_1_edges COIN EDGE LFN_N_h_edges
 y2 = LFN_N COIN EDGE (EXPAND EDGE (y1 COIN EDGE LFN_N_concave_corner) INSIDE BY 0.001 OUTSIDE BY 0.001)
 y3 = INT [y2] >= 0.09 <= 0.106+0.0005 ABUT<90 PROJ == 0
 y4 = INT [y2] >= 0.18 <= 0.212+0.0005 ABUT<90 PROJ == 0
 y5 = LFN_N_concave_corner WITH EDGE (LFN_N_concave_corner COIN EDGE (y3 OR EDGE y4))
 y6 = LFN_N_h_edges COIN EDGE y5
 err2 = INT LFN_N_h_edges y6 < 0.238 ABUT<90 OPPOSITE REGION
 err3 = (LENGTH ((LFN_N_v_edges TOUCH EDGE y5) TOUCH EDGE LFN_N_convex_eq_1_edges) < 0.238) EXPAND EDGE INSIDE BY 0.001
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

//LFN_P

Q: LFN_P width, single-point-interaction is allowed >= 0.192um
    DRC waive:
    1) LFN_P one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
    3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LFN_P_W_1 {
@ LFN_P width, single-point-interaction is allowed >= 0.192um
@ DRC waive:
@ 1) LFN_P one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
@ 3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = INT [LFN_P] < 0.192 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = INT [LFN_P] < 0.192 CORNER
 y3 = INT [LFN_P_v_edges] >= 0.09 < 0.107 PROJ == 0
 y4 = INT [LFN_P_v_edges] >= 0.18 < 0.213 PROJ == 0
 y5 = INT [LFN_P_h_edges] >= 0.09 < 0.107 PROJ == 0
 y6 = INT [LFN_P_h_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = (y3 OR EDGE y4) OR EDGE (y5 OR EDGE y6)

 waive_edges = LFN_P_90_90_jog_180_135_144 COIN EDGE LFN_P_h_edges
 waive_corner = INT [LFN_P_v_edges] waive_edges < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE waive_corner
 err2 = (y2 COIN EDGE LFN_P_concave_corner) NOT TOUCH EDGE y_all
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: LFN_P width in S/D direction, single-point-interaction is allowed >= 0.27um
    DRC waive:
    1) LFN_P one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
    3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LFN_P_W_2 {
@ LFN_P width in S/D direction, single-point-interaction is allowed >= 0.27um
@ DRC waive:
@ 1) LFN_P one-track width within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
@ 3) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = INT [LFN_P_v_edges] < 0.27 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = INT [LFN_P_v_edges] >= 0.09 < 0.107 PROJ == 0
 y3 = INT [LFN_P_v_edges] >= 0.18 < 0.213 PROJ == 0
 y4 = y2 OR EDGE y3

 waive_corner = INT [LFN_P_v_edges] LFN_P_90_90_jog_180_192_225_240_135_144_h_edges < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y4) NOT TOUCH EDGE waive_corner
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: LFN_P width in S/D direction, when LFN_P vertical edge CUT (GTMK1 OR AR) and ABUT HVT_P >= 0.315um
    DRC waive:
    1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
    2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LFN_P_W_3 {
@ LFN_P width in S/D direction, when LFN_P vertical edge CUT (GTMK1 OR AR) and ABUT HVT_P >= 0.315um
@ DRC waive:
@ 1) Jog width adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18/0.192/0.225/0.24um in S/D direction
@ 2) Jog width adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 check_edges = (LFN_P_v_edges TOUCH EDGE (LFN_P_v_edges INSIDE EDGE gtmk1_or_ar)) COIN EDGE HVT_P
 waive_corner = INT LFN_P_v_edges LFN_P_90_90_jog_180_192_225_240_135_144_h_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = LFN_P_v_edges NOT TOUCH EDGE waive_corner
 err1 = INT check_edges check_corner < 0.315 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: LFN_P width in GATE poly direction when LFN_P point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction (except L-shape/T-shape concave corner) >= 0.238um
A: 
LFN_P_W_4 {
@ LFN_P width in GATE poly direction when LFN_P point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction (except L-shape/T-shape concave corner) >= 0.238um
 err1 = INT (LFN_P_h_edges_singular_point COIN EDGE LFN_P_concave_corner) LFN_P_h_edges < 0.238 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK

 y1 = LFN_P_convex_eqlt_1_edges COIN EDGE LFN_P_h_edges
 y2 = LFN_P COIN EDGE (EXPAND EDGE (y1 COIN EDGE LFN_P_concave_corner) INSIDE BY 0.001 OUTSIDE BY 0.001)
 y3 = INT [y2] >= 0.09 <= 0.106+0.0005 ABUT<90 PROJ == 0
 y4 = INT [y2] >= 0.18 <= 0.212+0.0005 ABUT<90 PROJ == 0
 y5 = LFN_P_concave_corner WITH EDGE (LFN_P_concave_corner COIN EDGE (y3 OR EDGE y4))
 y6 = LFN_P_h_edges COIN EDGE y5
 err2 = INT LFN_P_h_edges y6 < 0.238 ABUT<90 OPPOSITE REGION
 err3 = (LENGTH ((LFN_P_v_edges TOUCH EDGE y5) TOUCH EDGE LFN_P_convex_eq_1_edges) < 0.238) EXPAND EDGE INSIDE BY 0.001
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

//DG

Q: DG width >= 0.286um
A: 
DG_W_1 {
@ DG width >= 0.286um
 err1 = INT DG < 0.286 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

//GT

Q: ALL_GT width >= 0.016um
A: 
GT_W_1 {
@ ALL_GT width >= 0.016um
 err1 = INT ALL_GT < GT_MiniWidth ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: ALL_GT width, except DMCMK1, LDBK, MARKS, OCOVL and LOGO regions <= 0.242um
A: 
GT_W_2 {
@ ALL_GT width, except DMCMK1, LDBK, MARKS, OCOVL and LOGO regions <= 0.242um
 except_region = OR DMCMK1 LDBK OCOVL LOGO MARKS
 err1 = (WITH WIDTH ALL_GT > GT_MaxiWidth) NOT except_region
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: ALL_GT width in core region, except GT_P96, INST, MARKS, OCOVL and LOGO regions = 0.016/0.018/0.02, 0.032, 0.07~0.242um
A: 
GT_W_3 {
@ ALL_GT width in core region, except GT_P96, INST, MARKS, OCOVL and LOGO regions = 0.016/0.018/0.02, 0.032, 0.07~0.242um
 except_region = OR GT_P96 OCOVL LOGO INST MARKS
 chk_GT = (ALL_GT NOT INSIDE DG) NOT INSIDE except_region
 good_1 = OR ALL_GT_016 ALL_GT_018 ALL_GT_020
 good_2 = WITH WIDTH chk_GT == 0.032
 good_3 = WITH WIDTH chk_GT >= 0.070 <= 0.242
 err1 = (chk_GT NOT (OR good_1 good_2 good_3)) NOT (OR DG except_region)
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: (GT OR GTDMP) width in core region INSIDE GT_P96 = 0.016/0.018/0.02/0.022/0.024um
A: 
GT_W_3a {
@ (GT OR GTDMP) width in core region INSIDE GT_P96 = 0.016/0.018/0.02/0.022/0.024um
 chk_GT = (DMP_GT NOT INSIDE DG) INTERACT GT_P96
 good_GT = OR ALL_GT_016 ALL_GT_018 ALL_GT_020 ALL_GT_022 ALL_GT_024
 err1 = ((chk_GT NOT good_GT) AND GT_P96) NOT DG
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: (AOP_GT INTERACT DG) width, except DGV region >= 0.086um
A: 
GT_W_4 {
@ (AOP_GT INTERACT DG) width, except DGV region >= 0.086um
 chk_GT = (AOP_GT INTERACT DG) NOT INSIDE DGV
 err1 = INT chk_GT < 0.086 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE DGV
}

Q: (AOP_GT INTERACT DG) width in DGV region >= 0.08um
A: 
GT_W_4a {
@ (AOP_GT INTERACT DG) width in DGV region >= 0.08um
 chk_GT = (AOP_GT INTERACT DG) NOT OUTSIDE DGV
 err1 = (INT chk_GT < 0.08 ABUT<90 SINGULAR REGION) INTERACT DGV
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Channel length for core NMOS/PMOS transistor, except ESDIO2, GT_P96, VARMOS, INST and PSUB regions = 0.016/0.018/0.02, 0.032, 0.07~0.242um
A: 
GT_W_5 {
@ Channel length for core NMOS/PMOS transistor, except ESDIO2, GT_P96, VARMOS, INST and PSUB regions = 0.016/0.018/0.02, 0.032, 0.07~0.242um
 except_region = OR ESDIO2 GT_P96 VARMOS PSUB INST
 chk_GATE = (GATE_CORE NOT INSIDE except_region) COIN EDGE channel_width_GT_edge
 bad_1 = INT (chk_GATE) == 0.016 ABUT<90 OPPOSITE
 bad_2 = INT (bad_1) == 0.018 ABUT<90 OPPOSITE
 bad_3 = INT (bad_2) == 0.020 ABUT<90 OPPOSITE
 bad_4 = INT (bad_3) == 0.032 ABUT<90 OPPOSITE
 bad_5 = INT (bad_4) >= 0.070 <= 0.242 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 err1 = bad_5 NOT INSIDE EDGE except_region
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Channel length for core NMOS/PMOS transistor INSIDE GT_P96 = 0.016/0.018/0.02/0.022/0.024um
A: 
GT_W_5a {
@ Channel length for core NMOS/PMOS transistor INSIDE GT_P96 = 0.016/0.018/0.02/0.022/0.024um
 chk_GATE = (GATE_CORE INTERACT GT_P96) COIN EDGE channel_width_GT_edge
 bad_1 = INT (chk_GATE) == 0.016 ABUT<90 OPPOSITE
 bad_2 = INT (bad_1) == 0.018 ABUT<90 OPPOSITE
 bad_3 = INT (bad_2) == 0.020 ABUT<90 OPPOSITE
 bad_4 = INT (bad_3) == 0.022 ABUT<90 OPPOSITE
 bad_5 = INT (bad_4) == 0.024 ABUT<90 OPPOSITE
 err1 = bad_5 INSIDE EDGE GT_P96
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Channel length of 1.8V MOS underdrive to 1.5V I/O NMOS/PMOS transistor (GATE AND DGUD) = 0.086~0.242um
A: 
GT_W_6 {
@ Channel length of 1.8V MOS underdrive to 1.5V I/O NMOS/PMOS transistor (GATE AND DGUD) = 0.086~0.242um
 chk_GATE = GATE_15 COIN EDGE channel_width_GT_edge
 err1 = INT (chk_GATE) >= 0.086 <= 0.242 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Channel length of 1.8V MOS underdrive to 1.2V I/O NMOS/PMOS transistor (GATE AND DGV) = 0.08~0.242um
A: 
GT_W_7 {
@ Channel length of 1.8V MOS underdrive to 1.2V I/O NMOS/PMOS transistor (GATE AND DGV) = 0.08~0.242um
 chk_GATE = GATE_12 COIN EDGE channel_width_GT_edge
 err1 = INT (chk_GATE) >= 0.080 <= 0.242 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Channel length of 1.8V I/O NMOS/PMOS transistor, except DGUD, DGV, VARMOS, LDBK regions = 0.134~0.242um
A: 
GT_W_8 {
@ Channel length of 1.8V I/O NMOS/PMOS transistor, except DGUD, DGV, VARMOS, LDBK regions = 0.134~0.242um
 WAIVE_AREA = OR VARMOS LDBK
 chk_GATE = (GATE_18 NOT INSIDE (OR DGV DGUD)) COIN EDGE channel_width_GT_edge
 err1 = INT (chk_GATE) >= 0.134 <= 0.242 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 err1 NOT INSIDE EDGE WAIVE_AREA
}

Q: Channel length for core NMOS/PMOS transistor for HVT device <= 0.032um
A: 
GT_W_9 {
@ Channel length for core NMOS/PMOS transistor for HVT device <= 0.032um
 chk_GATE = (GATE_CORE NOT OUTSIDE (OR HVT_N HVT_P)) COIN EDGE channel_width_GT_edge
 bad_1 = INT (chk_GATE) <= 0.032 ABUT<90 OPPOSITE
 err1 = bad_1 NOT OUTSIDE EDGE (OR HVT_N HVT_P)
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

gt_on_field_oxide = GT INTERACT AA
gt_on_field_oxide_jog_004 = CONVEX EDGE gt_on_field_oxide == 1 WITH LENGTH <= 0.004

Q: Width of AOP_GT neighboring to AOP_GT (width = 0.016/0.018um, space to AOP_GT < 0.117um), except ESDIO1, ESDIO2 regions = 0.016/0.018/0.02um
A: 
GT_W_10b {
@ Width of AOP_GT neighboring to AOP_GT (width = 0.016/0.018um, space to AOP_GT < 0.117um), except ESDIO1, ESDIO2 regions = 0.016/0.018/0.02um
 chk_AOP_GT = OR EDGE AOP_GT_016_v_edges AOP_GT_018_v_edges
 out_0 = AOP_GT_noESD COIN EDGE (EXT [AOP_GT_noESD] chk_AOP_GT < 0.117 OPPOSITE)
 out_1 = INT (out_0) AOP_GT_noESD == 0.016 OPPOSITE
 out_2 = INT (out_1) AOP_GT_noESD == 0.018 OPPOSITE
 out_3 = INT (out_2) AOP_GT_noESD == 0.020 OPPOSITE
 err1 = out_3 NOT INSIDE EDGE ESDIO_ALL
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}


Q: Width of AOP_GT neighboring to AOP_GT (width = 0.02um, space to AOP_GT < 0.117um), except INST, ESDIO1 and ESDIO2 regions = 0.016/0.018/0.02/0.022/0.024/0.032um
A: 
GT_W_10d {
@ Width of AOP_GT neighboring to AOP_GT (width = 0.02um, space to AOP_GT < 0.117um), except INST, ESDIO1 and ESDIO2 regions = 0.016/0.018/0.02/0.022/0.024/0.032um
 out_0 = AOP_GT_noESD_SRAM COIN EDGE (EXT [AOP_GT_noESD_SRAM] AOP_GT_020_v_edges < 0.117 OPPOSITE)
 out_1 = INT (out_0) AOP_GT_noESD == 0.016 OPPOSITE
 out_2 = INT (out_1) AOP_GT_noESD == 0.018 OPPOSITE
 out_3 = INT (out_2) AOP_GT_noESD == 0.020 OPPOSITE
 out_4 = INT (out_3) AOP_GT_noESD == 0.022 OPPOSITE
 out_5 = INT (out_4) AOP_GT_noESD == 0.024 OPPOSITE
 out_6 = INT (out_5) AOP_GT_noESD == 0.032 OPPOSITE
 err1 = out_6 NOT INSIDE EDGE (OR ESDIO_ALL INST)
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Width of AOP_GT neighboring to AOP_GT (width = 0.022/0.024um, space to ALL_GT < 0.117um), except ESDIO1 and ESDIO2 regions = 0.02/0.022/0.024/0.032um
A: 
GT_W_10e {
@ Width of AOP_GT neighboring to AOP_GT (width = 0.022/0.024um, space to ALL_GT < 0.117um), except ESDIO1 and ESDIO2 regions = 0.02/0.022/0.024/0.032um
 out_0 = AOP_GT_noESD COIN EDGE (EXT [AOP_GT_noESD] AOP_GT_022_024_v_edges < 0.117 OPPOSITE)
 out_1 = INT (out_0) AOP_GT_noESD == 0.020 OPPOSITE
 out_2 = INT (out_1) AOP_GT_noESD == 0.022 OPPOSITE
 out_3 = INT (out_2) AOP_GT_noESD == 0.024 OPPOSITE
 out_4 = INT (out_3) AOP_GT_noESD == 0.032 OPPOSITE
 err1 = out_4 NOT INSIDE EDGE ESDIO_ALL
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Width of AOP_GT neighboring to AOP_GT (width = 0.032um, space to ALL_GT < 0.117um), except INST, ESDIO1 and ESDIO2 regions = 0.02/0.022/0.024/0.032um
A: 
GT_W_10f {
@ Width of AOP_GT neighboring to AOP_GT (width = 0.032um, space to ALL_GT < 0.117um), except INST, ESDIO1 and ESDIO2 regions = 0.02/0.022/0.024/0.032um
 out_0 = AOP_GT_noESD_SRAM COIN EDGE (EXT [AOP_GT_noESD_SRAM] AOP_GT_032_v_edges < 0.117 OPPOSITE)
 out_1 = INT (out_0) AOP_GT_noESD == 0.020 OPPOSITE
 out_2 = INT (out_1) AOP_GT_noESD == 0.022 OPPOSITE
 out_3 = INT (out_2) AOP_GT_noESD == 0.024 OPPOSITE
 out_4 = INT (out_3) AOP_GT_noESD == 0.032 OPPOSITE
 err1 = out_4 NOT INSIDE EDGE (OR ESDIO_ALL INST)
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Width of AOP_GT neighboring to GATE (channel length <= 0.02um, AOP_GT to neighboring GATE space < 0.117um), except INST, ESDIO1 and ESDIO2 regions = 0.016/0.018/0.02um
A: 
GT_W_11a {
@ Width of AOP_GT neighboring to GATE (channel length <= 0.02um, AOP_GT to neighboring GATE space < 0.117um), except INST, ESDIO1 and ESDIO2 regions = 0.016/0.018/0.02um
 chk_GATE = GATE_noESD WITH EDGE (LENGTH GATE_LE <= 0.020)
 out_0 = AOP_GT_noESD_SRAM COIN EDGE (EXT [AOP_GT_noESD_SRAM] chk_GATE < 0.117 OPPOSITE)
 out_1 = INT (out_0) AOP_GT_noESD == 0.016 OPPOSITE
 out_2 = INT (out_1) AOP_GT_noESD == 0.018 OPPOSITE
 out_3 = INT (out_2) AOP_GT_noESD == 0.020 OPPOSITE
 err1 = out_3 NOT INSIDE EDGE (OR ESDIO_ALL INST)
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Width of AOP_GT neighboring to GATE (channel length = 0.022/0.024um, AOP_GT to neighboring GATE space < 0.117um), except ESDIO1, ESDIO2 regions = 0.02/0.022/0.024um
A: 
GT_W_11b {
@ Width of AOP_GT neighboring to GATE (channel length = 0.022/0.024um, AOP_GT to neighboring GATE space < 0.117um), except ESDIO1, ESDIO2 regions = 0.02/0.022/0.024um
 chk_GATE = GATE_noESD WITH EDGE (OR EDGE (LENGTH GATE_LE == 0.022) (LENGTH GATE_LE == 0.024))
 out_0 = AOP_GT_noESD COIN EDGE (EXT [AOP_GT_noESD] chk_GATE < 0.117 OPPOSITE)
 out_1 = INT (out_0) AOP_GT_noESD == 0.020 OPPOSITE
 out_2 = INT (out_1) AOP_GT_noESD == 0.022 OPPOSITE
 out_3 = INT (out_2) AOP_GT_noESD == 0.024 OPPOSITE
 err1 = out_3 NOT INSIDE EDGE ESDIO_ALL
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Width of AOP_GT neighboring to GATE (channel length = 0.032um, AOP_GT to neighboring GATE space < 0.117um), AOP_GT should be same to neighboring GATE, except ESDIO1, ESDIO2 regions = 0.032um
A: 
GT_W_11c {
@ Width of AOP_GT neighboring to GATE (channel length = 0.032um, AOP_GT to neighboring GATE space < 0.117um), AOP_GT should be same to neighboring GATE, except ESDIO1, ESDIO2 regions = 0.032um
 chk_GATE_032 = GATE_noESD WITH EDGE (LENGTH GATE_LE == 0.032)
 chk_GATE_034 = GATE_noESD WITH EDGE (LENGTH GATE_LE == 0.034)
 chk_GATE_036 = GATE_noESD WITH EDGE (LENGTH GATE_LE == 0.036)
 out_1 = AOP_GT_noESD COIN EDGE (EXT [AOP_GT_noESD] chk_GATE_032 < 0.117 OPPOSITE)
 out_2 = AOP_GT_noESD COIN EDGE (EXT [AOP_GT_noESD] chk_GATE_034 < 0.117 OPPOSITE)
 out_3 = AOP_GT_noESD COIN EDGE (EXT [AOP_GT_noESD] chk_GATE_036 < 0.117 OPPOSITE)

 err1_TMP = INT (out_1) AOP_GT_noESD == 0.032 OPPOSITE
 err1 = err1_TMP NOT INSIDE EDGE ESDIO_ALL
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Width of AOP_GT neighboring to GATE (channel length >= 0.07um, AOP_GT to neighboring GATE space = 0.117~0.118um), except ESDIO1, ESDIO2 and L-shape AA region >= 0.07um
A: 
GT_W_11d {
@ Width of AOP_GT neighboring to GATE (channel length >= 0.07um, AOP_GT to neighboring GATE space = 0.117~0.118um), except ESDIO1, ESDIO2 and L-shape AA region >= 0.07um
 chk_GATE = (GATE_noESD WITH EDGE (LENGTH GATE_LE >= 0.070)) NOT INTERACT L_shape_AA
 out_0 = AOP_GT_noESD_noLAA COIN EDGE (EXT [AOP_GT_noESD] chk_GATE >= 0.117 <= 0.118 OPPOSITE)
 out_1 = INT [out_0] AOP_GT_noESD < 0.070 OPPOSITE
 err1 = out_1 NOT INSIDE EDGE (OR ESDIO_ALL L_shape_AA)
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Width of AOP_GT neighboring to GATE (INSIDE DG, AOP_GT to neighboring GATE space = 0.117~0.118um), except DGV, ESDIO1, ESDIO2 and L-shape AA region >= 0.086um
A: 
GT_W_12a {
@ Width of AOP_GT neighboring to GATE (INSIDE DG, AOP_GT to neighboring GATE space = 0.117~0.118um), except DGV, ESDIO1, ESDIO2 and L-shape AA region >= 0.086um
 chk_GATE = GATE_in_DG NOT INSIDE (OR DGV ESDIO_ALL L_shape_AA)
 out_0 = AOP_GT_noESD_noLAA COIN EDGE (EXT [AOP_GT_noESD] chk_GATE >= 0.117 <= 0.118 OPPOSITE)
 out_1 = INT [out_0] AOP_GT_noESD < 0.086 OPPOSITE
 err1 = out_1 NOT INSIDE EDGE (OR DGV ESDIO_ALL L_shape_AA)
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Width of AOP_GT neighboring to GATE (INSIDE DGV, AOP_GT to neighboring GATE space = 0.117~0.118um), except ESDIO1, ESDIO2 and L-shape AA region >= 0.08um
A: 
GT_W_12b {
@ Width of AOP_GT neighboring to GATE (INSIDE DGV, AOP_GT to neighboring GATE space = 0.117~0.118um), except ESDIO1, ESDIO2 and L-shape AA region >= 0.08um
 chk_GATE = (GATE INSIDE DGV) NOT INSIDE (OR ESDIO_ALL L_shape_AA)
 out_0 = AOP_GT_noESD_noLAA COIN EDGE (EXT [AOP_GT_noESD] chk_GATE >= 0.117 <= 0.118 OPPOSITE)
 out_1 = INT [out_0] AOP_GT_noESD < 0.08 OPPOSITE
 err1 = out_1 NOT INSIDE EDGE (OR ESDIO_ALL L_shape_AA)
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

//GT_P96

Q: GT_P96 width in S/D direction >= 1.44um
A: 
GT_P96_W_1 {
@ GT_P96 width in S/D direction >= 1.44um
 err1 = INT GT_P96_v_edges < 1.44 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

//GTDMP
Q: GTDMP width = 0.016/0.018/0.02/0.022/0.024, 0.032, 0.07~0.242um
A: 
GTDMP_W_1 {
@ GTDMP width = 0.016/0.018/0.02/0.022/0.024, 0.032, 0.07~0.242um
 good_range = OR (OR GTDMP_016 GTDMP_018 GTDMP_020 GTDMP_022 GTDMP_024 GTDMP_032) (WITH WIDTH GTDMP >= 0.07 <= 0.242)
 err1 = GTDMP NOT good_range
 err2 = INT GTDMP < 0.016 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: GTDMP width when INTERACT DG, except DGV region = 0.086~0.242um
A: 
GTDMP_W_2 {
@ GTDMP width when INTERACT DG, except DGV region = 0.086~0.242um
 GTDMP_chk = (GTDMP INTERACT DG) NOT INSIDE DGV
 GTDMP_good = WITH WIDTH GTDMP_chk >= 0.086 <= 0.242
 err1 = GTDMP_chk NOT GTDMP_good
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: GTDMP width INSIDE GT_P96, except dummy cell = 0.016~0.024um
A: 
GTDMP_W_3 {
@ GTDMP width INSIDE GT_P96, except dummy cell = 0.016~0.024um
 good_1 = WITH WIDTH GTDMP_in_GT_P96 == 0.016
 good_2 = WITH WIDTH GTDMP_in_GT_P96 == 0.018
 good_3 = WITH WIDTH GTDMP_in_GT_P96 == 0.020
 good_4 = WITH WIDTH GTDMP_in_GT_P96 == 0.024
 good_5 = WITH WIDTH GTDMP_in_GT_P96 >= 0.016 <= 0.024
 err1 = (GTDMP_in_GT_P96 NOT (OR good_1 good_2 good_3 good_4 good_5)) AND GT_P96
 err1 NOT INSIDE DMCB1
}

//P2

Q: P2 width in GATE poly direction, except INST and OCOVL region = 0.048, 0.068, 0.108um
A: 
P2_W_1 {
@ P2 width in GATE poly direction, except INST and OCOVL region = 0.048, 0.068, 0.108um
 err1 = P2 NOT (OR P2_W_048 P2_W_068 P2_W_108)
 err1 NOT INSIDE INST_OCOVL
}

Q: Maximum width of ((ALL_GT INTERACT P2) NOT DG) <= 0.092um
A: 
P2_W_2 {
@ Maximum width of ((ALL_GT INTERACT P2) NOT DG) <= 0.092um
 err1 = ALL_GT_with_P2_core WITH WIDTH > 0.092
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Maximum width of ((ALL_GT INTERACT P2) NOT DG) when P2 width = 0.048um. < 0.07um
A: 
P2_W_3 {
@ Maximum width of ((ALL_GT INTERACT P2) NOT DG) when P2 width = 0.048um. < 0.07um
 chk_ALL_GT = ALL_GT_with_P2_core INTERACT P2_W_048
 err1 = chk_ALL_GT WITH WIDTH >= 0.07
 err1 NOT INSIDE SealR_NOT_BULK
}

//SN

Q: SN width, except INST region >= 0.192um
A: 
SN_W_1 {
@ SN width, except INST region >= 0.192um
 err1 = INT SN < SN_MiniWidth ABUT<90 SINGULAR REGION
 err1 NOT INSIDE INST
}

//SP
Q: SP width, except INST region and 45-degree SP in MARKS region >= 0.192um
A: 
SP_W_1 {
@ SP width, except INST region and 45-degree SP in MARKS region >= 0.192um
 err1 = INT (SP NOT INSIDE MARKS) < SP_MiniWidth ABUT<90 SINGULAR REGION
 err2 = INT (SP NOT OUTSIDE MARKS) < SP_MiniWidth SINGULAR REGION ANGLED == 0
 err1 NOT INSIDE MARKS_INST
 err2 NOT OUTSIDE MARKS
}

//M0DMP
Q: M0DMP width = 0.04, 0.042, 0.054um
A: 
M0DMP_W_1 {
@ M0DMP width = 0.04, 0.042, 0.054um
 err1 = INT M0DMP < 0.001 ABUT<90 SINGULAR REGION
 err2 = M0DMP NOT (OR M0DMP_040 M0DMP_042 M0DMP_054)
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

//M0GDMP
Q: M0GDMP width = 0.04/0.05/0.06um
A: 
M0GDMP_W_1 {
@ M0GDMP width = 0.04/0.05/0.06um
 err1 = INT M0GDMP < 0.001 ABUT<90 SINGULAR REGION
 err2 = M0GDMP NOT (OR M0GDMP_040 M0GDMP_050 M0GDMP_060)
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

//M0
Q: M0 width, except MARKS and OCOVL regions = 0.04, 0.042, 0.054um
A: 
M0_W_1 {
@ M0 width, except MARKS and OCOVL regions = 0.04, 0.042, 0.054um
//; point touch will be flagged by M0_S_1
 chk_m0 = M0_h_edges OUTSIDE EDGE MARKS_OCOVL
 err1 = LENGTH chk_m0 < M0_MiniWidth  //;based on M0.R.1
 err2 = (LENGTH chk_m0 > M0_MiniWidth < 0.042) OR EDGE (LENGTH chk_m0 > 0.042 < 0.054)  //;based on M0.R.1
 err3 = LENGTH chk_m0 > 0.054
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
 err3 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: M0 width in S/D direction when M0 INTERACT (AA INTERACT GT (width >= 0.07um)), except MARKS region = 0.054um
A: 
M0_W_2 {
@ M0 width in S/D direction when M0 INTERACT (AA INTERACT GT (width >= 0.07um)), except MARKS region = 0.054um
 chk_m0 = (M0_h_edges COIN EDGE (M0 INTERACT (AA INTERACT GT_eqgt_070))) NOT INSIDE EDGE MARKS
 err1 = LENGTH chk_m0 < 0.054
 err2 = LENGTH chk_m0 > 0.054
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

//M0C
Q: M0C width in GATE poly direction, except INST and OCOVL regions = 0.048, 0.051, 0.052, 0.082, 0.108um
A: 
M0C_W_1 {
@ M0C width in GATE poly direction, except INST and OCOVL regions = 0.048, 0.051, 0.052, 0.082, 0.108um
 err1 = (DFM COPY (DFM SPACE M0C < M0C_MiniWidth BY INT VERTICAL) REGION) OR (INT M0C < 0.01 ABUT<90 SINGULAR REGION)
 err2 = DFM COPY (DFM SPACE M0C > M0C_MiniWidth < 0.051 BY INT VERTICAL) REGION
 err3 = DFM COPY (DFM SPACE M0C > 0.052 < 0.082 BY INT VERTICAL) REGION
 err4 = DFM COPY (DFM SPACE M0C > 0.082 < 0.108 BY INT VERTICAL) REGION
 err5 = M0C_h_edges NOT COIN EDGE (DFM SPACE [M0C] <= 0.108 BY INT VERTICAL)

 err1 NOT INSIDE INST_OCOVL
 err2 NOT INSIDE INST_OCOVL
 err3 NOT INSIDE INST_OCOVL
 err4 NOT INSIDE INST_OCOVL
 err5 NOT INSIDE EDGE INST_OCOVL
}

Q: AOP_M0C width in GATE poly direction when INTERACT ALL_M0 (width = 0.054um) = 0.082, 0.108um
A: 
M0C_W_2 {
@ AOP_M0C width in GATE poly direction when INTERACT ALL_M0 (width = 0.054um) = 0.082, 0.108um
 in_Layer = AOP_M0C INTERACT ALL_M0_054 //; point touch flagged by M0C_S_7
 err1 = DFM COPY (DFM SPACE in_Layer < 0.082 BY INT VERTICAL) REGION
 err2 = DFM COPY (DFM SPACE in_Layer > 0.082 < 0.108 BY INT VERTICAL) REGION
 err3 = (ANGLE in_Layer == 0) NOT COIN EDGE (DFM SPACE [in_Layer] <= 0.108 BY INT VERTICAL)

 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: DOP_M0C width in GATE poly direction = 0.052, 0.082, 0.360um
A: 
M0C_W_3 {
@ DOP_M0C width in GATE poly direction = 0.052, 0.082, 0.360um
 err1 = DFM COPY (DFM SPACE DOP_M0C < 0.052 BY INT VERTICAL) REGION
 err2 = DFM COPY (DFM SPACE DOP_M0C > 0.052 < 0.082 BY INT VERTICAL) REGION
 err3 = DFM COPY (DFM SPACE DOP_M0C > 0.082 < 0.360 BY INT VERTICAL) REGION
 err4 = DOP_M0C_h_edges NOT COIN EDGE (DFM SPACE [DOP_M0C] <= 0.36 BY INT VERTICAL)

 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: M0C width when M0C interact RSPMK1 = 0.051um
A: 
M0C_W_4 {
@ M0C width when M0C interact RSPMK1 = 0.051um
 err1 = (M0C INTERACT RSPMK1) NOT M0C_051
 err1 NOT INSIDE SealR_NOT_BULK
}

//M0G
Q: M0G width, except OCOVL region = 0.04, 0.05~0.055, 0.06, 0.088um
A: 
M0G_W_1 {
@ M0G width, except OCOVL region = 0.04, 0.05~0.055, 0.06, 0.088um
 check_M0G = M0G NOT INSIDE OCOVL
 err1 = INT check_M0G < 0.04 ABUT<90 SINGULAR REGION
 err2 = WITH WIDTH check_M0G > 0.040 < 0.050
 err3 = WITH WIDTH check_M0G > 0.055 < 0.060
 err4 = WITH WIDTH check_M0G > 0.060 < 0.088
 err5 = WITH WIDTH check_M0G > 0.088

 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
 err5 NOT INSIDE SealR_NOT_BULK
}

//V0

Q: V0 width and length, except 0.032*0.08um RV0, MARKS, MARKG, OCOVL and LOGO regions = 0.032um
A: 
V0_W_1 {
@ V0 width and length, except 0.032*0.08um RV0, MARKS, MARKG, OCOVL and LOGO regions = 0.032um
 WAIVE_AREA = OR MARKS_MARKG_INDMY_LOGO OCOVL
 err1 = (V0 NOT V0N) NOT RV0
 err1 NOT INSIDE WAIVE_AREA
}

Q: V0 bar width, and V0 bar is only allowed in MARKS, MARKG, INDMY and LOGO region = 0.100um
     It allows 0.002um DRC checking telerance in 45-degree region
A: 
V0_W_2 {
@ V0 bar width, and V0 bar is only allowed in MARKS, MARKG, INDMY and LOGO region = 0.100um
@ It allows 0.002um DRC checking telerance in 45-degree region
//;Follow SRC.2a/2b
 Seal_Ring_all = V0 AND MARKS_MARKG_INDMY_LOGO
 Seal_Ring_orth = RECTANGLE Seal_Ring_all
 Seal_Ring_real = NOT RECTANGLE Seal_Ring_all
 Seal_Ring_joint = CONVEX EDGE Seal_Ring_all ANGLE1>269<271 ANGLE2>224<226

 Y1 = Seal_Ring_real COIN EDGE V0_v_edges
 Y2 = Seal_Ring_real COIN EDGE V0_h_edges
 Y3 = INT [Y1] == 0.100 ABUT<90 OPPOSITE
 Y4 = INT [Y2] == 0.100 ABUT<90 OPPOSITE
 err1 = (Y1 NOT TOUCH EDGE Y3) NOT COIN EDGE Seal_Ring_joint
 err2 = (Y2 NOT TOUCH EDGE Y4) NOT COIN EDGE Seal_Ring_joint
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK

 Seal_Ring_real_SKEW = ANGLE Seal_Ring_real > 44 < 46
 Seal_Ring_real_SKEW_good = INT [Seal_Ring_real] >= 0.100-0.002 <= 0.141+0.002 ABUT<90 OPPOSITE ANGLED==2
 err3 = (Seal_Ring_real_SKEW NOT TOUCH EDGE Seal_Ring_real_SKEW_good) NOT COIN EDGE Seal_Ring_joint
 err3 NOT INSIDE EDGE SealR_NOT_BULK
}

//RV0
Q: RV0.W.1: Rectangular V0 width, except OCOVL, MARKS and MARKG region = 0.032um
    RV0.L.1: Rectangular V0 length, except OCOVL, MARKS and MARKG region = 0.080um
A: 
RV0_W_1_L_1 {
@ RV0.W.1: Rectangular V0 width, except OCOVL, MARKS and MARKG region = 0.032um
@ RV0.L.1: Rectangular V0 length, except OCOVL, MARKS and MARKG region = 0.080um
 WAIVE_AREA = OR MARKS_MARKG_INDMY_LOGO OCOVL
 err1 = (V0 NOT RV0) NOT V0N
 err1 NOT INSIDE WAIVE_AREA
}

//BM0
Q: BM0.W.1: M0_B1 or M0_B2 width in S/D direction = 0.04um
    BM0.L.1: M0_B1 length in GATE poly direction = 0.022um
    BM0.L.2: M0_B2 length in GATE poly direction = 0.064um
A: 
BM0_W_1_L_1_L_2 {
@ BM0.W.1: M0_B1 or M0_B2 width in S/D direction = 0.04um
@ BM0.L.1: M0_B1 length in GATE poly direction = 0.022um
@ BM0.L.2: M0_B2 length in GATE poly direction = 0.064um
 err1 = M0_B2 NOT M0_B2_SELECT
 err2 = M0_B1 NOT M0_B1_SELECT
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

//BV0

Q: BV0_W_1: V0_B0 width in S/D direction = 0.032um
    BV0.L.1: Length of V0_B0 = 0.08um
A: 
BV0_W_1_L_1_L_2 {
@ BV0_W_1: V0_B0 width in S/D direction = 0.032um
@ BV0.L.1: Length of V0_B0 = 0.08um
 err1 = V0_B0 NOT V0_B0_SELECT
 err1 NOT INSIDE SealR_NOT_BULK
}
